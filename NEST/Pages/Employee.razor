@page "/employee"
@using System.ComponentModel
@using AntDesign.TableModels
@using AntDesign.Core.Extensions
<a href="/addemployee" class="btn btn-primary mt-3 mb-3"> Add Employee</a>
<div class=" table-responsive">

    <Table  TItem="EntEmployee" DataSource="@data">

        <GenerateColumns  Range="1.." Definitions=definitions />

    <ActionColumn Title="Action">
        <Space Size=@("middle")>
           
            <SpaceItem>
                    <Button Danger @onclick="(()=>deleteEmployee(context.Pk_EmployeeId))">Delete</Button>
            </SpaceItem>
        </Space>
    </ActionColumn>
</Table>
</div>

@code {
   
    DataTable dt = new DataTable();
    List<EntEmployee> employees = new List<EntEmployee>();
    EntEmployee[] data = new EntEmployee[] { };

    protected override async Task OnInitializedAsync()
    {
        dt = await DALCRUD.ReadTable("SP_GetEmployee");
        ConvertDataIntoArray();

    }
    private void ConvertDataIntoArray()
    {
        foreach (DataRow row in dt.Rows)
        {
            EntEmployee employee = new EntEmployee
                    {
                        Pk_EmployeeId = row["pk_EmployeeId"].ToString(), // Adjust column names as needed
                        Name = row["Name"].ToString(),
                        FatherName = row["FatherName"].ToString(),
                       
                        DOB = row["DOB"].ToString(),
                        Email = row["Email"].ToString(),
                        PhoneNo = row["PhoneNo"].ToString(),
                        CNIC = row["CNIC"].ToString(),
                        Designation = row["Designation"].ToString(),
                        // Map other properties here if needed
                    };

            employees.Add(employee);
        }
        data=employees.ToArray();
    }
         
    void definitions(string propertyName, object column)
    {
        if (propertyName == "Tags")
        {
            var tagCol = ((Column<string[]>)column);

            tagCol.CellRender = cellData =>
    @<span>
        @foreach (var tag in cellData.FieldValue)
        {
            var color = tag.Length > 5 ? "geekblue" : "green";
            if (tag == "loser")
            {
                color = "volcano";
            }
            <Tag Color="@color">@tag</Tag>
        }
            </span>
    ;

            return;
        }

        // You can use the `SetValue` extension method to set parameters for columns.
        column.SetValue("Sortable", true);
        column.SetValue("Filterable", true);
    }

    private void deleteEmployee(string id)
    {
        SqlParameter[] sp =
       {

            new SqlParameter("@pk_EmployeeId",id),
    };
        DALCRUD.CRUD("SP_deleteEmployeeInfo", sp);
        nm.NavigateTo("/employee", forceLoad: true);
    }
}
